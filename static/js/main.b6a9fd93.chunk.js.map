{"version":3,"sources":["Components/row/Row.js","Components/BottomBar/BottomBar.js","firebase.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["Row","card","React","createElement","Card","raised","key","id","className","src","concat","image","alt","name","onClick","handleClick","BottomBar","props","BottomNavigation","children","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","Login","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleSubmit","_ref","_asyncToGenerator","_callee","_context","preventDefault","signInWithEmailAndPassword","t0","console","error","alert","message","_x","apply","arguments","onSubmit","onChange","target","required","App","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","state","isAuthenticated","levels","cards","threshold","shuffleArray","array","shuffled","j","Math","floor","random","shuffle","_ref2","setState","_toConsumableArray","findId","clicked","includes","returnFirstNull","indexOf","insertId","index","map","elem","emptyClicked","Array","fill","resetScoreZero","score","incrementBothScores","topScore","incrementScore","getNewCards","num","newCards","_loop","randomIndex","characters","usedCards","prevState","event","currentLevel","newScore","newTopScore","newLevel","log","fetchedNewCards","_createClass","_this2","onAuthStateChanged","user","_this3","totalCards","cardsPerRow","min","ceil","sqrt","document","documentElement","style","setProperty","numberOfRows","Fragment","AppBar","position","color","from","_","rowIndex","assign","BottomNav","background","marginTop","paddingTop","borderTop","Component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6a9fd93.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from '@material-ui/core/Card';\nimport \"./row.css\";\n\n\nconst Row = card => (\n    <Card\n        raised={true}\n        key={card.id}\n        className=\"card\"\n    >\n        <img\n            src={`imgs/${card.image}`}\n            alt={card.name}\n            className=\"card-image\"\n            onClick={card.handleClick}\n            id={card.id}\n        />\n    </Card>\n)\n\nexport default Row;","import React from \"react\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport \"./BottomBar.css\"\n\nconst BottomBar = props => (\n    <BottomNavigation {...props}>\n        {props.children}\n    </BottomNavigation>\n)\n\nexport default BottomBar;","import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDzKR87R4cNSoL6xBTPpDq6s4d-2MjvvS0\",\r\n    authDomain: \"memory-mix-up.firebaseapp.com\",\r\n    projectId: \"memory-mix-up\",\r\n    storageBucket: \"memory-mix-up.appspot.com\",\r\n    messagingSenderId: \"99153954821\",\r\n    appId: \"1:99153954821:web:44b58deb7dca1a6665346c\",\r\n    measurementId: \"G-69SLCVT8HS\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth(app);\r\n","import React, { useState } from 'react';\r\nimport { auth } from './firebase';\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            console.error(\"Error signing in\", error);\r\n            alert(error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h2>Login</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>Email:</label>\r\n                    <input type=\"email\" value={email} onChange={e => setEmail(e.target.value)} required />\r\n                </div>\r\n                <div>\r\n                    <label>Password:</label>\r\n                    <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} required />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport \"./App.css\";\nimport characters from \"./Characters.json\";\nimport Row from \"./Components/row/Row.js\";\nimport BottomNav from \"./Components/BottomBar\";\nimport { auth } from './firebase';\nimport Login from './Login';\n\n\nclass App extends Component {\n  state = {\n    isAuthenticated: false,\n    // ... other state variables\n  }\n\n  componentDidMount() {\n    // This will check if the user has logged in. If yes, then it will set isAuthenticated to true.\n    auth.onAuthStateChanged(user => {\n        if (user) {\n            this.setState({ isAuthenticated: true });\n        } else {\n            this.setState({ isAuthenticated: false });\n        }\n    });\n  }\n\n  // Define levels, card counts, and the score thresholds\n  levels = [\n    { cards: 4, threshold: 4 },\n    { cards: 4, threshold: 8 },\n    { cards: 9, threshold: 17 },\n    { cards: 9, threshold: 26 },\n    { cards: 9, threshold: 35 },\n    { cards: 16, threshold: 51 },\n    { cards: 16, threshold: 67 },\n    { cards: 16, threshold: 83 },\n    { cards: 16, threshold: 99 },\n    { cards: 16, threshold: 115 }\n];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: this.shuffleArray(characters).slice(0, this.levels[0].cards),\n      score: 0,\n      topScore: 0,\n      clicked: Array(this.levels[0].cards).fill(false),\n      currentLevel: 0,\n      usedCards: []\n    };\n  }\n\n  //Fisher-Yates Shuffle on characters\n  shuffleArray = (array) => {\n    let shuffled = array.slice();  // make a copy\n    for (let i = shuffled.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  }\n  //Fisher-Yates Shuffle on cards, update state\n  shuffle = () => {\n    let c = this.state.cards;\n    for (let i = c.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [c[i], c[j]] = [c[j], c[i]];\n    }\n    this.setState({\n      cards: [...c]\n    })\n  }\n  // Check the clicked array for an id\n  findId = id => {\n    return this.state.clicked.includes(id);\n  }\n  // Return the index of where the first null(empty space in clicked array) is found\n  returnFirstNull = () => {\n    return this.state.clicked.indexOf(false);\n  }\n  // Insert id into clicked array\n  insertId = (id, index) => {\n    this.setState({\n      clicked: this.state.clicked.map((elem, i) => {\n      return i === index ? id : elem;\n    })\n    });\n  }\n  // Clear clicked array\n  emptyClicked = () => {\n    this.setState({\n      clicked: Array(16).fill(false)\n    });\n  }\n  // Reset the score\n  resetScoreZero = () => {\n    this.setState({\n      score: 0\n    });\n  }\n  // Increment both the scores (setState is async...)\n  incrementBothScores = () => {\n    this.setState({\n      score: this.state.score + 1,\n      topScore: this.state.topScore + 1\n    });\n  }\n  // increment just the score\n  incrementScore = () => {\n    this.setState({\n      score: this.state.score + 1\n    });\n  }\n\n  // Get new cards each level\n  getNewCards = (num) => {\n    let newCards = [];\n    // Fetch unique cards not used before in this game session\n    while (newCards.length < num) {\n        const randomIndex = Math.floor(Math.random() * characters.length);\n        if (!this.state.usedCards.includes(randomIndex) && !newCards.includes(characters[randomIndex])) {\n            newCards.push(characters[randomIndex]);\n            this.setState(prevState => ({\n                usedCards: [...prevState.usedCards, randomIndex]\n            }));\n        }\n    }\n    return newCards;\n  }\n\n\n  // Main game logic here\n  handleClick = event => {\n    const id = event.target.id;\n\n  if (this.findId(id)) {\n      // It has already been clicked!\n      alert('Sorry, You already clicked that one.');\n      // Reset the counters...\n      this.emptyClicked();\n      this.resetScoreZero();\n      // Reset the game to the start\n      this.setState({\n          cards: this.shuffleArray(characters).slice(0, this.levels[0].cards),\n          clicked: Array(this.levels[0].cards).fill(false),\n          currentLevel: 0,\n          usedCards: []\n      });\n      // No need to shuffle here since we're using shuffleArray above\n  } else {\n      // Not already clicked...\n      // Put the id in the clicked array\n      this.insertId(id, this.returnFirstNull());\n      \n      let newScore = this.state.score + 1;\n      let newTopScore = this.state.topScore;\n      \n      if (newScore > this.state.topScore) {\n          newTopScore = newScore;\n      }\n      \n      this.setState({\n          score: newScore,\n          topScore: newTopScore\n      });\n      \n      this.shuffle();  // Shuffle the cards here after updating the score.\n      \n      // Check if all cards have been clicked for the current level\n      if (newScore >= this.levels[this.state.currentLevel].threshold) {\n        let newLevel = this.state.currentLevel + 1;\n\n        // Logging the current state of the usedCards array\n        console.log(\"Used Cards:\", this.state.usedCards);\n    \n        // Logging the new level\n        console.log(\"New Level:\", newLevel);\n    \n        let fetchedNewCards = this.getNewCards(this.levels[newLevel].cards);\n        console.log(\"New Cards:\", fetchedNewCards);\n        \n        if (newLevel >= this.levels.length) {\n            // If user completes the last level\n            alert(\"Congratulations! You have beat the game.\");\n            this.setState({\n                score: 0,\n                currentLevel: 0,\n                clicked: Array(this.levels[0].cards).fill(false),\n                cards: this.shuffleArray(characters).slice(0, this.levels[0].cards),\n                usedCards: []\n            });\n            return;\n        }\n      \n        // If all cards have been clicked, proceed to the next level\n        this.setState({\n          cards: this.shuffleArray(fetchedNewCards).slice(0, this.levels[newLevel].cards),\n          clicked: Array(this.levels[newLevel].cards).fill(false),\n          currentLevel: newLevel\n        });\n      }\n    }\n  }\n\n  render() {\n    if (!this.state.isAuthenticated) {\n      return <Login />;\n    }\n\n    const totalCards = this.state.cards.length;\n    const cardsPerRow = Math.min(4, Math.ceil(Math.sqrt(totalCards)));\n    document.documentElement.style.setProperty('--cards-per-row', cardsPerRow);\n    const numberOfRows = Math.ceil(totalCards / cardsPerRow);\n\n    return (\n      <>\n        <AppBar position=\"fixed\" color=\"secondary\">\n          <nav className=\"navbar navbar-default myNavColor\">\n            <div className=\"container-fluid\">\n              <div className=\"navbar-header\">\n                <h2 className=\"whiteText impactFont\">Memory Mix-Up</h2>\n              </div>\n\n              <ul className=\"nav navbar-nav whiteText\">\n                <li>\n                  <h4>Current Score: {this.state.score} || High Score: {this.state.topScore}</h4>\n                </li>\n              </ul>\n            </div>\n          </nav>\n        </AppBar>\n        <div id=\"main-content\" className=\"container\">\n        {Array.from({ length: numberOfRows }).map((_, rowIndex) => (\n          <div className=\"row\" key={rowIndex}>\n            {this.state.cards\n              .slice(rowIndex * cardsPerRow, (rowIndex + 1) * cardsPerRow)\n              .map((card, index) => (\n                <Row\n                  {...card}\n                  handleClick={this.handleClick}\n                  key={index}\n                />\n              ))}\n          </div>\n        ))}\n        </div>\n        <BottomNav style={{ background: \"#FFFFFF\", marginTop: \"17.5px\", paddingTop: \"15px\", borderTop: \"2.5px solid slategray\" }}>\n          \n        </BottomNav>\n\n      </>\n    );\n  }\n\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}